package github;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

import org.eclipse.jgit.api.*;
import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.errors.*;
import org.eclipse.jgit.errors.UnmergedPathException;
import org.eclipse.jgit.transport.*;


public class RepoManager {
	
	private final String name = "YONGSHUONI";
    private final String password = "nys19931002Nys";

    // credentials
    private final CredentialsProvider cp = new UsernamePasswordCredentialsProvider(name, password);

	
	public Git clone(String clone_url, String name) 
			throws InvalidRemoteException, TransportException, GitAPIException, IOException, InterruptedException{
		//remove the previous folder
		Runtime r = Runtime.getRuntime();
		Process p1 = r.exec("rm -rf /var/lib/tomcat8/webapps/AutoESTest/Repositories/"+name);		
		p1.waitFor();
		
		File dir = new File("/var/lib/tomcat8/webapps/AutoESTest/Repositories/"+name);
		
		// download url 
        CloneCommand cc = new CloneCommand()
                .setCredentialsProvider(cp)
                .setDirectory(dir)
                //.setURI("https://github.com/YONGSHUONI/"+name+".git");
                .setURI(clone_url);
        Git git = cc.call();
        return git;

	}
	
	
	
	public void push(String name,Git git) throws TransportException, GitAPIException{
		// add
        AddCommand ac = git.add();
        ac.addFilepattern(".");
        try {
            ac.call();
        } catch (NoFilepatternException e) {
            e.printStackTrace();
        }
       
        // commit
        CommitCommand commit = git.commit();
        commit.setOnly("src");
        commit.setCommitter("YONGSHUONI", "nkniyongshuo@163.com")
                .setMessage("Test result push back");
        try {
            commit.call();
        } catch (NoHeadException e) {
            e.printStackTrace();
        } catch (NoMessageException e) {
            e.printStackTrace();
        } catch (ConcurrentRefUpdateException e) {
            e.printStackTrace();
        } catch (WrongRepositoryStateException e) {
            e.printStackTrace();
        }
		
		
     // push
	    PushCommand pc = git.push();
	    pc.setCredentialsProvider(cp)
	    			//push to YONGSHUONI
	    			.setRemote("https://github.com/YONGSHUONI/"+name)
	                .setForce(true)
	                .setPushAll();
	    try {
	    	Iterator<PushResult> it = pc.call().iterator();
	        if(it.hasNext()){
	            System.out.println(it.next().toString());
	        }

	    } catch (InvalidRemoteException e) {
	        e.printStackTrace();
	    }
	
	}
	
	
	
	public void fork(String forks_url,String name) throws IOException, InterruptedException{
		Runtime r = Runtime.getRuntime();
		// fork to the third party
		Process p1 = r.exec("curl --user YONGSHUONI:nys19931002Nys -X POST "+forks_url);
		p1.waitFor();
	   
	}
	
	
	public void pullRequest(String pulls_url,String name) throws IOException, InterruptedException{
		Runtime r = Runtime.getRuntime();
		pulls_url = pulls_url.replace("{/number}", "");
		
		Process p1 = r.exec(new String[]{"curl","--user","YONGSHUONI:nys19931002Nys","-X","POST"
				,"--data","{\"title\":\"Test suites from EvoSuite\",\"body\":\"It includes a folder named test in src, generated by EvoSuite\",\"head\":\"YONGSHUONI:master\",\"base\":\"master\"}"
				,pulls_url});

		p1.waitFor();
		
	}
	
}
